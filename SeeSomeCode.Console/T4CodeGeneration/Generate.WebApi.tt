<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<# 
	var solutionDir = this.Host.ResolveAssemblyReference("$(SolutionDir)"); //requires hostspecific=true
	var doc = new System.Xml.XmlDocument();
	doc.Load( solutionDir + "SeeModel.xml" );

	string localeIdDefault = doc.DocumentElement.GetAttribute("modelName");
    var modelElements = doc.DocumentElement.SelectNodes("/AppModel/ModelResources//ModelResource");
#>

using System.Collections.Generic;
using System.Net.Http;
using System.Web.Http;
using SeeSomeCode.T4Depends;

<#
    foreach (System.Xml.XmlElement me in modelElements)
    {
		var resourceName = me.Attributes["resourceName"].Value;
		var nameSpace = me.Attributes["nameSpace"].Value;
		var standardMethods = me.Attributes["standardMethods"].Value;
		var standardMethodsArray = standardMethods.ToUpper().Split(',');
		var viewModelName = me.Attributes["viewModel"].Value;
#>
// GENERATED CODE (<#= resourceName #>) - SEE GENERATE.WEBAPI.TT FOR DISCUSSION
namespace <#= nameSpace #>
{
    /// <summary>
    /// REST Resource - <#= resourceName #>
    /// </summary>
	[RoutePrefix("api/<#= resourceName #>")]
    public partial class <#= resourceName #>Controller : BaseApiController<ISeeBusinessLogic>
    {
        public <#= resourceName #>Controller( ISeeBusinessLogic bizLogic ) : base( bizLogic ) { }

<#
	// -------------------------------------------------------------------------------------
    if (Array.IndexOf(standardMethodsArray, "GETALL") > -1)
    {
#>
		[Route("")]
		public IEnumerable<<#= viewModelName #>> GetAll()
        {
            var viewModelList = new List<<#= viewModelName #>>();
            var dm = BizLogic.GetMany("Values");
		    foreach (var model in dm)
		    {
                viewModelList.Add(new <#= viewModelName #>( model.SampleDomainId, "<#= resourceName #>" ) { 
					ViewModelString = model.SampleDomainString 
				});
            }
            return viewModelList;
        }
<#
	} // end of Array.IndexOf(standardMethodsArray, "GETALL") > -1
#>

<#
	// -------------------------------------------------------------------------------------
    if (Array.IndexOf(standardMethodsArray, "GETONE") > -1)
    {
#>
		[Route("{id}")]
		public IHttpActionResult GetSingle(int id)
		{
			var domainModel = BizLogic.GetOne( "Values", "123" );
			if ( domainModel == null )
			{
				return NotFound();
			}
            // todo: implement automapper for this        
			return Ok( new <#= viewModelName #>( domainModel.SampleDomainId, "<#= resourceName #>" )
			{
                ViewModelString = domainModel.SampleDomainString
			});
		}
<#
	} // end of Array.IndexOf(standardMethodsArray, "GETONE") > -1
#>

<#
	// -------------------------------------------------------------------------------------
    if (Array.IndexOf(standardMethodsArray, "POST") > -1)
    {
#>
		[Route("")]
        public HttpResponseMessage Post( [FromBody] SampleDto postValue )
        {
            //DebugMessage("handling post request in controller");
            var domainObject = BizLogic.PostOne("", postValue);
            var viewModel = new <#= viewModelName #>( domainObject.SampleDomainId, "<#= resourceName #>" )
            {
                ViewModelString = domainObject.SampleDomainString
            };
            return base.MakeResponse( viewModel );
        }
<#
	} // end of Array.IndexOf(standardMethodsArray, "POST") > -1
#>

		/// <summary>
		/// <#= viewModelName #> - 
		/// </summary>
		/// <remarks>
		/// Any 
		/// </remarks>
		public class <#= viewModelName #>
		{
			public int ViewModelId { get; private set; }
			public string ViewModelString { get; set; }
			public IList<WebApiLink> Links { get; set; }

			public <#= viewModelName #>(int id, string resourceName)
			{
				ViewModelId = id;
				Links = new List<WebApiLink>();
                Links.Add(new WebApiLink(id, resourceName));
			}
		}
    }
}

<#
    }
#>