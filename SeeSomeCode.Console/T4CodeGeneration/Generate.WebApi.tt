<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ assembly name="System.Xml" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
<# 
	var solutionDir = this.Host.ResolveAssemblyReference("$(SolutionDir)"); //requires hostspecific=true
	var doc = new System.Xml.XmlDocument();
	doc.Load( solutionDir + "SeeModel.xml" );

	string localeIdDefault = doc.DocumentElement.GetAttribute("modelName");
    var modelElements = doc.DocumentElement.SelectNodes("/AppModel/ModelResources//ModelResource");
#>

using System.Collections.Generic;
using System.Net.Http;
using System.Web.Http;

<#
    foreach (System.Xml.XmlElement me in modelElements)
    {
		var resourceName = me.Attributes["resourceName"].Value;
		var nameSpace = me.Attributes["nameSpace"].Value;
		var standardMethods = me.Attributes["standardMethods"].Value;
		var standardMethodsArray = standardMethods.ToUpper().Split(',');
#>
// GENERATED CODE - SEE GENERATE.WEBAPI.TT FOR DISCUSSION
namespace SeeSomeCode
{
    /// <summary>
    /// REST Resource - <#= resourceName #>
    /// </summary>
	[RoutePrefix("api/<#= resourceName #>")]
    public partial class <#= resourceName #>Controller : BaseApiController<ISeeBusinessLogic>
    {
        public <#= resourceName #>Controller( ISeeBusinessLogic bizLogic ) : base( bizLogic ) { }

<#
    if (Array.IndexOf(standardMethodsArray, "GETALL") > -1)
    {
#>
		[Route("")]
		public IEnumerable<object> GetAll()
        {
            return BizLogic.GetMany("<#= resourceName #>");
        }
<#
	} // end of Array.IndexOf(standardMethodsArray, "GETALL") > -1
#>

<#
    if (Array.IndexOf(standardMethodsArray, "GETONE") > -1)
    {
#>
		[Route("{id}")]
		public IHttpActionResult GetSingle(int id)
		{
			var resourceSingle = BizLogic.GetOne( "<#= resourceName #>", "123" );
			if ( resourceSingle == null )
			{
				return NotFound();
			}
			return Ok( resourceSingle );
		}
<#
	} // end of Array.IndexOf(standardMethodsArray, "GETONE") > -1
#>

<#
    if (Array.IndexOf(standardMethodsArray, "POST") > -1)
    {
#>
		[Route("")]
        public HttpResponseMessage Post( [FromBody] object postValue )
        {
            //DebugMessage("handling post request in controller");

            //BizLogic.DoSomething();

            return base.MakeResponse();
        }
<#
	} // end of Array.IndexOf(standardMethodsArray, "POST") > -1
#>
    }
}

<#
    }
#>